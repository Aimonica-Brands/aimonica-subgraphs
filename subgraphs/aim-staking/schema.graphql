enum StakeStatus {
  Active
  Unstaked
  EmergencyUnstaked
}

type Project @entity {
  id: Bytes! # projectId
  stakingToken: Bytes
  registered: Boolean!
  stakes: [Stake!]! @derivedFrom(field: "project")
  totalStaked: BigInt!
  userCount: BigInt!
  projectUsers: [ProjectUser!]! @derivedFrom(field: "project")
  createdAt: BigInt!
  transactionHash: Bytes!
}

type User @entity {
  id: Bytes! # user address
  stakes: [Stake!]! @derivedFrom(field: "user")
  projectUsers: [ProjectUser!]! @derivedFrom(field: "user")
  totalStaked: BigInt!
  activeStakeCount: BigInt!
}

type Stake @entity {
  id: ID! # stakeId
  stakeId: BigInt!
  user: User!
  project: Project!
  amount: BigInt!
  stakingToken: Bytes!
  stakedAt: BigInt!
  duration: BigInt!
  unlockedAt: BigInt!
  status: StakeStatus!
  transactionHash: Bytes!
}

type ProjectUser @entity {
  id: ID! # projectId + "-" + userId
  project: Project!
  user: User!
  activeStakeCount: BigInt!
}
